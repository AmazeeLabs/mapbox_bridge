<?php

/**
 * Implements hook_menu().
 */
function mapbox_views_menu() {
  $items['mapbox_views_field_matching/autocomplete/%'] = array(
    'page callback' => '_mapbox_views_field_matching_autocomplete',
    'page arguments' => array(2),
    'access arguments' => array('administer views'),
    'type' => MENU_CALLBACK
  );

  return $items;
}
/**
 * Custom Function returning fields of the given $field_type
 * */
function _mapbox_views_field_matching_autocomplete($field_type, $string) {
  $autocomplete_suggestions = array();

  // Some fantasy DB table which holds field configuration
  $query = db_select('field_config', 'fc');

  // Select rows that match the string
  $query->fields('fc', array('field_name'));
  $query->condition('fc.type', $field_type, '=');
  $query->condition('fc.field_name', '%' . db_like($string) . '%', 'LIKE');
  $query->groupBy('fc.field_name');

  $query->leftJoin('field_config_instance', 'fci', 'fci.field_id = fc.id');
  $query->addExpression("GROUP_CONCAT(fci.bundle ORDER BY fci.bundle asc SEPARATOR ', ')", 'bundle_names');

  // add matches to $matches
  $results = $query->execute();
  foreach ($results as $row) {
    $autocomplete_suggestions[$row->field_name] = check_plain($row->field_name . ' (' . $row->bundle_names . ')');
  }

  // return for JS
  drupal_json_output($autocomplete_suggestions);
}

/**
 * Implements hook_views_api().
 */
function mapbox_views_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'mapbox_views') . '/views',
  );
}

/**
 * Custom submit handler that removes one specific mapping.
 * */
function mapbox_views_ajax_remove_mapping($form, &$form_state) {
  // key of the element that should be removed
  $key = $form_state['clicked_button']['#name'];

  // remove element and reindex the array so we can count from 0 again
  unset($form_state['input']['options']['mapping'][$key]);
  $form_state['input']['options']['mapping'] = array_values($form_state['input']['options']['mapping']);

  // remove one entry from mapping
  $form_state['view']->mapping--;
}

/**
 * Custom submit handler that adds an additional, empty mapping.
 * */
function mapbox_views_ajax_add_mapping($form, &$form_state) {
  $form_state['view']->mapping++;
}